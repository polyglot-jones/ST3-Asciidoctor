// SYNTAX TEST "Packages/ST4-Asciidoctor/Syntaxes/Asciidoctor.sublime-syntax"
= Bold Text Formatting

AsciiDoc Documentation reference:
https://docs.asciidoctor.org/asciidoc/latest/text/bold/[Bold^]

Bold/Strong is one of AsciiDoc text formatting elements, belonging to the
https://docs.asciidoctor.org/asciidoc/latest/text/[_quotes_ category^].


== Constrained

AsciiDoc Documentation reference:
https://docs.asciidoctor.org/asciidoc/latest/text/#constrained[Constrained formatting pair^]

[.big.red]*Source*

[source,asciidoc]
This *is bold*. This is not.

[.big.red]*Result*

============================
This *is bold*. This is not.
//   ^^^^^^^^^  meta.boldinner.single
//    ^^^^^^^   markup.bold.single
//   ^          punctuation.definition.bold.single.begin
//           ^  punctuation.definition.bold.single.end
============================


== Unconstrained

AsciiDoc Documentation reference:
https://docs.asciidoctor.org/asciidoc/latest/text/#unconstrained[Unconstrained formatting pair^]

[.big.red]*Source*

[source,asciidoc]
SublimeText is **super**fast.

[.big.red]*Result*

=============================
SublimeText is **super**fast.
//             ^^^^^^^^^   meta.boldinner.double
//               ^^^^^     markup.bold.double
//             ^^          punctuation.definition.bold.double.begin
//                    ^^   punctuation.definition.bold.double.end
//                      ^^^^^  - markup.bold.double
=============================


== Multi-line

Unconstrained strong text can span across multiple lines in the same paragraph, as long as no blank lines or block elements are encountered between the opening and closing bold delimiter:

[.big.red]*Source*

[source,asciidoc]
......................................
*A very long bold text.
Spanning multiple lines.* Normal text.
......................................

[.big.red]*Result*

======================================
*A very long bold text.
Spanning multiple lines.* Normal text.
// <-                      meta.boldinner.single
//^^^^^^^^^^^^^^^^^^^^^^^  meta.boldinner.single
// <-                      markup.bold.single
//^^^^^^^^^^^^^^^^^^^^^    markup.bold.single
//                      ^  punctuation.definition.bold.single.end
//                       ^^^^^^^^^^^^^^  - meta.boldinner.single
======================================


=== With Line Comments

Single-line comments inside a bold text spanning across multiple lines will be ingored in the final text, and are OK to use:

[.big.red]*Source*

[source,asciidoc]
...................................................
*A bold text spanning multiple lines
// a comment
with a single line comment inbetween.* Normal text.
...................................................

[.big.red]*Result*

===================================================
*A bold text spanning multiple lines
// a comment
//^^^^^^^^^^ comment.line.double-slash   meta.line.comment.content
//^^^^^^^^^^ meta.boldinner
with a single line comment inbetween.* Normal text.
// <-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.boldinner.single
===================================================

Block comments (like any other block elements) are not OK, and will break the quote.


=== With Blank Line

But if a blank line is encountered before the closing delimiter -- i.e. if the text spans across multiple paragraphs -- then Asciidoctor will not format the text as bold:

[.big.red]*Source*

[source,asciidoc]
...............................................
A very long-**bold text spanning multiple lines.

With blank lines inbetween.**
...............................................

[.big.red]*Result*

===============================================
A very long-**bold text spanning multiple lines.
//          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^   meta.boldinner.double

// <- invalid.illegal
With blank lines inbetween.**
// ^^^^^^^^^^^^^^^^^^^^^^^^    - meta.boldinner.double
//                         ^^    punctuation.definition.bold.double.begin

===============================================

The AsciiDoc syntax will handle such cases by interrupting bold-parsing when encountering a blank line, and scoping the first blank line as `invalid` -- to draw the user's attention to the problem.

NOTE: This is a temporary workaround.
It will soon be replaced by proper handling via context branching instead.


== False Positives Checks

Let's test for false positive matches of `*` occurrences which are _not_ strong delimiters...


=== Literal Asterisk Character

The syntax now exploits context branching to detect literal `*` symbols and treat them accordingly without breaking syntax highlighting.

[.big.red]*Source*

[source,asciidoc]
-------------------
Example: 2 * 6 = 12
-------------------

[.big.red]*Result*

===================
Example: 2 * 6 = 12
//         ^ constant.character.literal.asterisk
===================


=== Escaped Asterisk Character

A `*` symbols preceded by the `\` escape symbol should not be considered a strong delimiter.

[.big.red]*Source*

[source,asciidoc]
----------------------------
Ecaped \*asterisk* not bold.
----------------------------

[.big.red]*Result*

===============================================
Ecaped \*asterisk* not bold.
//     ^^            constant.character.escape
//      ^           -constant.character.literal.asterisk
//      ^           -punctuation.definition.string.unquoted
//               ^  -punctuation.definition.string.unquoted
//               ^   constant.character.literal.asterisk
===============================================




== Nested Elements

Bold quotes allow nesting a variety of inline elements.


=== Text Formatting Constrained

[.big.red]*Source*

[source,asciidoc]
Testing *bold with _italics_ and `monospaced` inside it.*

[.big.red]*Result*

=========================================================
Testing *bold with _italics_ and `monospaced` inside it.*
//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.boldinner.single
//       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  markup.bold.single
//                 ^^^^^^^^^                              meta.italicinner.single
//                               ^^^^^^^^^^^^             meta.literalinner.single
=========================================================


=== Text Formatting Unconstrained

[.big.red]*Source*

[source,asciidoc]
**bold with__italics__ and``monospaced`` inside**it.

[.big.red]*Result*

===================================================
**bold with__italics__ and``monospaced`` inside**it.
// <-                                             meta.boldinner.double
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.boldinner.double
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^   markup.bold.double
//         ^^^^^^^^^^^                            meta.italicinner.double
//                        ^^^^^^^^^^^^^^          meta.literalinner.double
===================================================

// EOF //
